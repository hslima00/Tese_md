{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"TODO's","text":""},{"location":"#please-edit-this-sheet-to-give-me-todos","title":"Please edit this sheet to give me TODOs","text":""},{"location":"Markdown_Tests/","title":"Markdown Tests","text":"<pre><code>    theme:\n    features:\n        - content.code.annotate # (1)\n</code></pre> <ol> <li> <p>:man_raising_hand: I'm a code annotation! I can contain <code>code</code>, formatted     text, images, \u2026 basically anything that can be expressed in Markdown.</p> </li> <li> <p> item 1</p> <ul> <li> item A</li> <li> item B         more text<ul> <li> item a</li> <li> item b</li> <li> item c</li> </ul> </li> <li> item C</li> </ul> </li> <li> item 2</li> <li> item 3</li> </ol> BashExplanation <pre><code>#!/bin/bash\n\necho \"Hello world!\"\n</code></pre> <p>This is only a short example of how to make tabs.</p> <ul> <li> text</li> <li> text</li> <li> <p> text</p> <p>#!/bin/bash grep $1 $2</p> </li> </ul> <p>#!/bin/bash grep $1 $2</p> <pre><code>\"\"\" Bubble sort \"\"\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre> Bubble sort<pre><code>\"\"\" Bubble sort \"\"\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre> <p> <p>0%</p> <p>5%</p> <p>25%</p> <p>45%</p> <p>65%</p> <p>85%</p> <p>100% ready</p> </p> <p> <p></p> </p> <p>blockdiag {     A -&gt; B -&gt; C -&gt; D;     A -&gt; E -&gt; F -&gt; G; }</p> <p>blockdiag {    // Set labels to nodes.    A [label = \"foo\"];    B [label = \"bar\"];    // And set text-color    C [label = \"baz\"];</p> <p>// Set labels to edges. (short text only)    A -&gt; B [label = \"click bar\", textcolor=\"red\"];    B -&gt; C [label = \"click baz\"];    C -&gt; A; }</p> <p>blockdiag {    // Set boder-style, backgroun-color and text-color to nodes.    A [style = dotted];    B [style = dashed];    C [color = pink, style = \"3,3,3,3,15,3\"]; //dashed_array format style    D [color = \"#888888\", textcolor=\"#FFFFFF\"];    // Set border-style and color to edges.    A -&gt; B [style = dotted];    B -&gt; C [style = dashed];    C -&gt; D [color = \"red\", style = \"3,3,3,3,15,3\"]; //dashed_array format style    // Set numbered-badge to nodes.    E [numbered = 99];    // Set arrow direction to edges.    E -&gt; F [dir = none];    F -&gt; G [dir = forward];    G -&gt; H [dir = back];    H -&gt; I [dir = both];    // Set width and height to nodes.    K [width = 192]; // default value is 128    L [height = 64]; // default value is 40    // Use thick line    J -&gt; K [thick]    K -&gt; L; }</p> <p>blockdiag {   // branching edges to multiple children   A -&gt; B, C;   // branching edges from multiple parents   D, E -&gt; F; }</p> <p>Ctrl\uff0bAlt\uff0bDel</p>"},{"location":"Reuni%C3%B5es/","title":"1-Mar-24","text":"<p>PPT: 01MAR24</p> <p>YOLOv9 paper released on 21FEV24</p> <ul> <li>yolov9 + atrativo </li> <li>meter v9 a funcionar na maquina ciafa</li> <li>o q \u00e9 q vamos ganhar em rela\u00e7\u00e3o ao v8 ?</li> <li>perceber se v9 serve os nossos prpopositos ?</li> <li>exemplo minimo a correr no ciafa </li> <li>adaotar escrito para tese </li> </ul>"},{"location":"Reuni%C3%B5es/#segunda-reuni\u00e3o","title":"Segunda reuni\u00e3o","text":"<ul> <li>03-Mar-24: eu percebi q estava a ser parvo quando disse \"ah e tal o yolov9 n tem segmenta\u00e7\u00e3o ainda, ent\u00e3o talvez seja melhor ficar com o yolov8\"</li> <li>para fazer o autolabelling n\u00f3s apenas precisamos das capacidades do YOLO para fazer object detection, e por sua vez as \"bounding boxes\", portanto d\u00e1 para usar YOLOv9</li> </ul>"},{"location":"ciafa/","title":"CIAFA","text":""},{"location":"ciafa/#yolov9","title":"YOLOv9","text":"<p>04-Mar-24</p>"},{"location":"ciafa/#activating-venv-and-installed-libs","title":"Activating venv and installed libs","text":"BashInstalled in venv <pre><code>source .venv/bin/activate\n</code></pre> <p>I installed everything inside the <code>requirements.txt</code> given in the YOLOv9 repo using the command: </p> Installing requirements.txt<pre><code>pip install -r requirements.txt\n</code></pre> <p>The contents of this file are:  <pre><code>    # requirements\n    # Usage: pip install -r requirements.txt\n\n    # Base ------------------------------------------------------------------------\n    gitpython\n    ipython\n    matplotlib&gt;=3.2.2\n    numpy&gt;=1.18.5\n    opencv-python&gt;=4.1.1\n    Pillow&gt;=7.1.2\n    psutil\n    PyYAML&gt;=5.3.1\n    requests&gt;=2.23.0\n    scipy&gt;=1.4.1\n    thop&gt;=0.1.1\n    torch&gt;=1.7.0\n    torchvision&gt;=0.8.1\n    tqdm&gt;=4.64.0\n    # protobuf&lt;=3.20.1\n\n    # Logging ---------------------------------------------------------------------\n    tensorboard&gt;=2.4.1\n    # clearml&gt;=1.2.0\n    # comet\n\n    # Plotting --------------------------------------------------------------------\n    pandas&gt;=1.1.4\n    seaborn&gt;=0.11.0\n\n    # Export ----------------------------------------------------------------------\n    # coremltools&gt;=6.0\n    # onnx&gt;=1.9.0\n    # onnx-simplifier&gt;=0.4.1\n    # nvidia-pyindex\n    # nvidia-tensorrt\n    # scikit-learn&lt;=1.1.2\n    # tensorflow&gt;=2.4.1\n    # tensorflowjs&gt;=3.9.0\n    # openvino-dev\n\n    # Deploy ----------------------------------------------------------------------\n    # tritonclient[all]~=2.24.0\n\n    # Extras ----------------------------------------------------------------------\n    # mss\n    albumentations&gt;=1.0.3\n    pycocotools&gt;=2.0\n</code></pre></p>"},{"location":"links/","title":"01-Mar-24","text":"<p>YOLOv9 paper</p>"},{"location":"ssh/","title":"Comandos SSH","text":""},{"location":"workplan/","title":"Workplan","text":""}]}